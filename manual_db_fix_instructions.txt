Manual Database Fix Instructions for Doctor.contactInfo Column Issue:

1. Connect to your PostgreSQL database using your preferred client (psql, pgAdmin, etc.).

2. Check if the incorrect "contactInfo" column exists in the "Doctor" table:
   ```sql
   \d "Doctor"
   ```
   Look for a column named "contactInfo" of type TEXT.

3. If the "contactInfo" column exists, remove it:
   ```sql
   ALTER TABLE "Doctor" DROP COLUMN "contactInfo";
   ```

4. Verify that the "DoctorContactInfo" table exists:
   ```sql
   \d "DoctorContactInfo"
   ```
   It should have columns like id, phone, officeAddress, city, state, zipCode, country.

5. Verify that the "Doctor" table has a foreign key column "contactInfoId" referencing "DoctorContactInfo":
   ```sql
   \d "Doctor"
   ```
   Look for "contactInfoId" column and foreign key constraint.

6. If the "DoctorContactInfo" table or foreign key is missing, create them manually:
   ```sql
   CREATE TABLE IF NOT EXISTS "DoctorContactInfo" (
       id SERIAL PRIMARY KEY,
       phone TEXT NOT NULL,
       officeAddress TEXT NOT NULL,
       city TEXT NOT NULL,
       state TEXT NOT NULL,
       zipCode TEXT NOT NULL,
       country TEXT NOT NULL
   );

   ALTER TABLE "Doctor"
   ADD COLUMN IF NOT EXISTS "contactInfoId" INTEGER UNIQUE,
   ADD CONSTRAINT IF NOT EXISTS "Doctor_contactInfoId_fkey"
   FOREIGN KEY ("contactInfoId") REFERENCES "DoctorContactInfo"(id) ON DELETE SET NULL ON UPDATE CASCADE;
   ```

7. After fixing the database schema, regenerate the Prisma client:
   ```bash
   npx prisma generate
   ```

8. Restart your application and test the doctor login functionality.

---

Please follow these steps carefully to manually fix the database schema inconsistency causing the PrismaClientKnownRequestError.

If you need assistance executing these steps or further help, please let me know.
